@{
    ViewBag.Title = "AddCredit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="indicator"></div>
<div style="display:none;" id="loggedInUserId">@ViewBag.LoggedInUserId</div>
<div class="panel">

    <div id="tabs">
      <ul>
        <li><a href="#tab-1"><span>Basic Info</span></a></li>
        <li><a href="#tab-2"><span>Relationship Summary</span></a></li>
        <li><a href="#tab-3"><span>Facility Details</span></a></li>
        <li><a href="#tab-4"><span>CIB Status</span></a></li>
        <li><a href="#tab-5"><span>Credit Risk Grading</span></a></li>
        <li><a href="#tab-6"><span>Audit Objection</span></a></li>
      </ul>
        <div id="tab-1"> 
            <table class="form-entry">
                <tr style="display: none;">
                    <td>Id:</td>
                    <td>
                        <input id="txtId" type="text" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Branch:
                    </td>
                    <td>
                        <select id="ddlBranch">
                            <option value="0">Select a branch</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td style="vertical-align:top;">
                        Client:
                    </td>
                    <td>
                        <select id="ddlClient" size="5" style="width:320px;">
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        Subject:
                    </td>
                    <td>
                        <input id="txtSubject" type="text" style="width: 313px" />
                    </td>
                </tr>
                <tr>
                    <td style="vertical-align:top;">
                        Subject Details:
                    </td>
                    <td>
                        <textarea  id="txtSubjectDetails" rows="4" cols="50"></textarea>
                    </td>
                </tr>   
                <tr>
                    <td>
                        Borrower Name:
                    </td>
                    <td>
                        <input id="txtBorrowerName" type="text" style="width: 313px" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Proposed Facility:
                    </td>
                    <td>
                        <input id="txtProposedFacility" type="text" style="width: 313px" />
                    </td>
                </tr> 
                <tr>
                    <td>
                        Branch Proposal Ref:
                    </td>
                    <td>
                        <input id="txtBranchRef" type="text" style="width: 313px" />
                    </td>
                </tr>  
                <tr>
                    <td>
                        Application Date:
                    </td>
                    <td>
                        <input id="txtApplicationDate" type="text" style="width: 200px" />
                    </td>
                </tr>      
                <tr>
                    <td>
                        Branch Proposal Date:
                    </td>
                    <td>
                        <input id="txtBranchProposalDate" type="text" style="width: 200px" />
                    </td>
                </tr>                
            </table>  
            
            <br />
            
            <table>
                <tr>
                    <td>
                        Save as:
                    </td>
                    <td style="padding-left:10px;">
                        <input id="rbDraft" type="radio" name="saveStatus" checked="checked" value="0">Draft&nbsp;
                        <input id="rbPending" type="radio" name="saveStatus" value="1">Sent to review
                    </td>
                </tr>
                <tr>
                    <td colspan="2" style="height:5px;"></td>
                </tr>
                <tr id="trAssignUser" style="display:none;">
                    <td>Sent to:</td>
                    <td>
                        <select id="ddlAssignUser"></select>
                    </td>
                </tr>
            </table> 
            
            <br />
            
            <table>
                <tr>
                    <td>
                        <input name="submit" type="submit"  value="Save Proposal" class="create-credit-button fg-button ui-state-default"/>
                    </td>
                    <td>
                        <div id="message"></div>
                    </td>
                </tr>
            </table>        
                      
        </div>
        <div id="tab-2"> 
            <table class="form-entry">
                <tr>
                    <td>
                        Nature of Facility:
                    </td>
                    <td>
                        <select id="ddlNatureOfFacility">
                            <option value="Composite Limit">Composite Limit</option>
                            <option value="Enhancement of Composite Limit">Enhancement of Composite Limit</option>
                            <option value="Renewal of Composite Limit">Renewal of Composite Limit</option>
                            <option value="Renewal with enhancement">Renewal with enhancement</option>                            
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        Sanction Date:
                    </td>
                    <td>
                        <input type="text" id="dpSanctionDate">
                    </td>
                </tr>
                <tr>
                    <td>
                        Funded Limit:
                    </td>
                    <td>
                        <input id="txtFundedLimit" type="text" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Non Funded Limit:
                    </td>
                    <td>
                        <input id="txtNonFundedLimit" type="text" />
                    </td>
                </tr>   
                <tr>
                    <td>
                        Expiry Date:
                    </td>
                    <td>
                        <input id="dpExpiryDate" type="text" />
                    </td>
                </tr>  
                <tr>
                    <td>
                        Reschedule Time:
                    </td>
                    <td>
                        <input id="txtRescheduleTime" type="text" />
                    </td>
                </tr> 
                <tr>
                    <td>
                        Reschedule Amount:
                    </td>
                    <td>
                        <input id="txtRescheduleAmount" type="text" />
                    </td>
                </tr>
                <tr>
                    <td>
                        Approval Authority:
                    </td>
                    <td>
                        <input id="txtApprovalAuthority" type="text" />
                    </td>
                </tr>
                <tr>
                    <td>

                    </td>
                    <td>
                        <input id="btnRelationshipSummary" name="submit" type="submit"  value="Add Relationship" class="fg-button ui-state-default"/>
                    </td>                    
                </tr>
                      
            </table>
            <br />
            <div class="relationshipSummaryList"></div>
            <div style="clear:both;"></div>
        </div>
        <div id="tab-3"> 
                        <table class="form-entry">
                <tr>
                    <td>
                        Nature of Facility:
                    </td>
                    <td>
                        <select id="ddlFacility">
                            <option value="0">Select Nature of Facility</option>
                        </select>
                    </td>
                </tr>
            </table>
            <table style="width:100%;" class="facilityEntry">
                    <tr>
                        <th>EL Funded</th>
                        <th>EL Non Funded</th>
                        <th>POS Funded</th>
                        <th>POS Non Funded</th>
                        <th>Validity</th>
                        <th>EOL</th>
                        <th>LY Turn Over</th>
                        <th>Overdue Installment(s) NO.</th>
                        <th>Overdue Installment(s) Amount</th>
                        <th>CL Status</th>
                        <th>APF Funded</th>
                        <th>APF Non Funded</th>
                    </tr>
                    <tr>
                        <td><input id="txtELFunded" type="text" /></td>
                        <td><input id="txtELNonFunded" type="text" /></td>
                        <td><input id="txtPOSFunded" type="text" /></td>
                        <td><input id="txtPOSNonFunded" type="text" /></td>
                        <td><input id="txtValidity" type="text" /></td>
                        <td><input id="txtEOL" type="text" /></td>
                        <td><input id="txtLYTurnOver" type="text" /></td>
                        <td><input id="txtODInstNO" type="text" /></td>
                        <td><input id="txtODInstAmout" type="text" /></td>
                        <td><input id="txtCLStatus" type="text" /></td>
                        <td><input id="txtAPFFunded" type="text" /></td>
                        <td><input id="txtAPFNonFunded" type="text" /></td>
                    </tr>
                    <tr>
                        <td clospan="12">
                            <input name="submit" type="submit"  value="Add" class="create-facility-button fg-button ui-state-default"/>
                        </td>
                    </tr>
                </table>  
            <br />              
            <div class="facility-record-list"></div>     
        </div>
        <div id="tab-4"> 
            <table class="cibStatusEntry">
                <tr>
                    <th>Nature of Facility</th>
                    <th>Customer Liability Limit</th>
                    <th>Customer Liability O/S</th>
                    <th>Allied Liability Limit</th>
                    <th>Allied Liability O/S</th>                        
                </tr>
                <tr>
                    <td>
                        <input id="rdFunded" type="radio" name="rdNOF" value="1" checked="checked"/>Funded
                        <input id="rdNonFunded" type="radio" name="rdNOF" value="2"/>Non-Funded
                    </td>
                    <td><input id="txtCustLimit" type="text" /></td>
                    <td><input id="txtCustOS" type="text" /></td>
                    <td><input id="txtAlliedLimit" type="text" /></td>
                    <td><input id="txtAlliedOS" type="text" /></td>                        
                </tr>
                <tr>
                    <td clospan="12">
                        <input name="submit" type="submit"  value="Add" class="create-cibstatus-button fg-button ui-state-default"/><br/><br/>
                    </td>
                </tr>
            </table>                
            <div class="cibstatus-record-list"></div>      
        </div>
        <div id="tab-5"> 
            <h2>Tab5</h2>       
        </div>
        <div id="tab-6"> 
            <h2>Tab6</h2>       
        </div>        
    </div>
</div>
<div>   
</div>

<script type="text/javascript">

    $(document).ready(function () {

        // Initialize tabs
        $("#tabs").tabs();

        // Initialize date picker
        $("#dpSanctionDate").datepicker();
        $("#dpExpiryDate").datepicker();

        // Initialize Application date
        var d = new Date();
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var year = d.getFullYear();
        txtApplicationDate.value = day + '/' + month + '/' + year;
        txtBranchProposalDate.value = day + '/' + month + '/' + year;

        // Load groups
        PopulateBranchList();

        BindUserList();

        // Faciluty Details
        PopulateFacilityList();
        

        var creditId = getUrlVars()["creditId"]; //parseInt(getUrlVars()["creditId"], 10);
        var isNew = getUrlVars()["isNew"];
        txtId.value = creditId;
        $('#txtId').val(creditId);

        if (creditId) {
            if (isNew) {
                $("#tabs").tabs('enable', 1).tabs('select', 1)
            }
            PopulateCreditBasicInfo(creditId);
            PopulateRelationshipSummaryList(creditId);
            BindFacilityList(creditId);
            PopulateCIBStatusTable(creditId);
        }

        // Status
        $('input:radio[name="saveStatus"]').change(
            function () {
                if ($(this).is(':checked') && $(this).val() == '1') {
                    $('#trAssignUser').show().css('padding-top', '10px');
                }
                else {
                    $('#trAssignUser').hide();
                }
            });

        // Create company
        $(".create-credit-button").click(function (e) {
            e.preventDefault();

            var key = $("#txtId").val();
            var id = key ? key : 0;
            var branchId = $("#ddlBranch").val();
            var clientId = $("#ddlClient").val();
            var loggedInUserId = $('#loggedInUserId').html();
            var status = $('input:radio[name="saveStatus"]').val();
            var assignUserId = (status === "0") ? loggedInUserId : $("#ddlAssignUser").val();
            var subject = $("#txtSubject").val();
            var subjectDetails = $("#txtSubjectDetails").val();
            var borrowerName = $("#txtBorrowerName").val();
            var applicationDate = $("#txtApplicationDate").val();
            var branchProposalDate = $("#txtBranchProposalDate").val();
            var proposedFacility = $("#txtProposedFacility").val();
            var branchRef = $("#txtBranchRef").val();
            
            // Prepare the department object
            var creditInfo = {
                CreditInfoId: id, Subject: subject, BranchId: branchId, ClientId: clientId, CreatedUserId: loggedInUserId, AssignUserId: assignUserId, Status: status,
                SubjectDetails: subjectDetails, BorrowerName: borrowerName,
                ApplicationDate: applicationDate, BranchProposalDate: branchProposalDate,
                ProposedFacility: proposedFacility, BranchRef: branchRef
            };
            
            // Show loader
            showActionLoader(true, 'Saving Credit Information');

            // Ajax call
            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveCreditInfo", "Credit")",
                data: creditInfo,                
                cache: false,
                dataType: "json",
                success: function (data) {

                    clearData();

                    window.location = '/Credit/AddCredit?creditId=' + data.createdCreditInfoId + '&isNew=true';                    

                    //// Show message
                    //$('#message').html('Credit proposal has been created successfully!').addClass('success-message').show();
                    //setTimeout(function () {
                    //    $('#message').html('').removeClass('success-message').hide();
                    //}, 5000);
                        
                },
                Error: function () {
                    $('#message').html('Failed to save the record!').addClass('success-message').show();
                }
            });
        });

        // Create company
        $("#btnRelationshipSummary").click(function (e) {
            e.preventDefault();

            var creditInfoId = parseInt(getUrlVars()["creditId"], 10);
            
            var natureOfFacility = $("#ddlNatureOfFacility").val();
            var sanctionDate = '2013-12-30'; //$("#dpSanctionDate").datepicker("getDate");
            var fundedLimit = $('#txtFundedLimit').val();
            var nonFundedLimit = $('#txtNonFundedLimit').val();
            var expiryDate = '2013-12-30'; //$("#dpExpiryDate").datepicker("getDate");
            var reScheduleTime = $("#txtRescheduleTime").val();
            var reScheduleAmount = $("#txtRescheduleAmount").val();
            var approvalAuthority = $("#txtApprovalAuthority").val();

            // Prepare the department object
            var relationshipSummary = {
                CreditInfoId: creditInfoId, FacilityNature: natureOfFacility, SanctionDate: sanctionDate,
                FundedLimit: fundedLimit, NonFundedLimit: nonFundedLimit, ExpiryDate: expiryDate,
                RescheduleTime: reScheduleAmount, RescheduleAmount: reScheduleAmount, ApprovalAuthority: approvalAuthority
            };

            // Show loader
            showActionLoader(true, 'Saving Credit Information');

            // Ajax call
            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveRelationshipSummary", "Credit")",
                data: relationshipSummary,
                cache: false,
                dataType: "json",
                success: function (data) {

                    PopulateRelationshipSummaryList(creditInfoId);

                    $("#dpSanctionDate").val('');
                    $("#txtFundedLimit").val('');
                    $("#txtNonFundedLimit").val('');
                    $("#dpExpiryDate").val('');
                    $("#txtRescheduleTime").val('');
                    $("#txtRescheduleAmount").val('');
                    $("#txtApprovalAuthority").val('');
                    $("#ddlNatureOfFacility").focus();
                    

                },
                Error: function () {
                    showError("Error to execute ajax call");
                }
            });
        });

        // Read a page's GET URL variables and return them as an associative array.
        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        function PopulateRelationshipSummaryList(creditId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetRelationshipSummaryList", "Credit")",
                        //data: { creditId: $("#txtId").val() },
                        data: { creditId: creditId },
                        cache: false,
                        dataType: "json",
                        success: function (data) {
                            $('.relationshipSummaryList').html(data.html);
                            $('#recordList').dataTable({
                                "bPaginate": false,
                                "bFilter": false,
                                "bInfo": false
                            });
                        },
                        error: function (xhr, status, error) {
                            showError("Error to execute ajax call");
                        }
            });
        }

        function PopulateCreditBasicInfo(creditId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCreditBasicInfo", "Credit")",
                data: { creditId: $("#txtId").val() },
                cache: false,
                dataType: "json",
                success: function (data) {
                    
                    txtSubject.value = data.Subject;
                    ddlBranch.value = data.BranchId;
                    $('#ddlBranch').trigger("change");
                    ddlClient.value = data.ClientId;
                    txtApplicationDate.value = data.ApplicationDate;
                    txtBranchProposalDate.value = data.BranchProposalDate;
                    txtBorrowerName.value = data.BorrowerName;
                    txtBranchRef.value = data.BranchRef;
                    txtProposedFacility.value = data.ProposedFacility;
                    txtSubjectDetails.value = data.SubjectDetails;
                },
                error: function (xhr, status, error) {
                    showError("Error to execute ajax call");
                }
            });
        }

        $('#ddlBranch').change(function () {
            
            var branchId = $('#ddlBranch').val();
            PopulateClientList(branchId);
        });

        // Edit company
        $('.view-details').live("click", function (el, ev) {

            el.preventDefault();
            var id = $(this).attr('id');
            
            window.location = '/Credit/CreditDetails/' + id;
        });

        // Edit company
        $('.edit').live("click", function (el, ev) {
            el.preventDefault();
            var id = $(this).attr('id').replace('edit-', '');

            BindEmployee(id);            
        });

        // Delete company
        $('.delete').live("click", function (el, ev) {
            el.preventDefault();
            var id = $(this).attr('id').replace('delete-', '');
            
            DeleteEmployee(id);
        });

        // Clear data
        $('.clear-button').click(function (el, ev) {            
            clearData();
        });
    });

    function PopulateBranchList() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetBranchList", "Credit")",                
                cache: false,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        var option = new Option(item.value, item.key);
                        $('#ddlBranch').append(option);
                    });
                },
                error: function (xhr, status, error) {
                    showError("Error to execute ajax call");
                }
        });
    }

    function PopulateClientList(branchId) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetClientList", "Credit")",
            cache: false,
            dataType: "json",
            data: { branchId: branchId },            
            success: function (data) {
                $('#ddlClient').empty();
                $.each(data, function (i, item) {
                    var option = new Option(item.value, item.key);
                    $('#ddlClient').append(option);
                });
            },
            error: function (xhr, status, error) {
                showError("Error to execute ajax call");
            }
        });
    }    

    function BindUserList() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetUserList", "User")",
            cache: false,
            dataType: "json",            
            success: function (data) {
                $.each(data, function (i, item) {
                    var option = new Option(item.value, item.key);
                    $('#ddlAssignUser').append(option);
                });
            },
            error: function (xhr, status, error) {
                showError("Error to execute ajax call");
            }
        });
    }    

    function clearData() {
        $("#txtId").val('');
        $("#txtInfo").val('');
        $("#ddlClient").empty();               
    }

    // ******* Facility Section *********//
    // Create company
    $(".create-facility-button").click(function (e) {
        e.preventDefault();

        var creditInfoId = parseInt(getUrlVars()["creditId"], 10);
        var NatureOfFacilityId = $("#ddlFacility").val();
        var ELFunded = $("#txtELFunded").val();
        var ELNonFunded = $("#txtELNonFunded").val();
        var POSFunded = $("#txtPOSFunded").val();
        var POSNonFunded = $("#txtPOSNonFunded").val();
        var Validity = $("#txtValidity").val();
        var EOL = $("#txtEOL").val();
        var LYTurnOver = $("#txtLYTurnOver").val();
        var ODInstNO = $("#txtODInstNO").val();
        var ODInstAmout = $("#txtODInstAmout").val();
        var CLStatus = $("#txtCLStatus").val();
        var APFFunded = $("#txtAPFFunded").val();
        var APFNonFunded = $("#txtAPFNonFunded").val();
        var FacilityFor = 1; //TODO Hard coded - it may be cust or sisterId


        // Prepare data transfer object
        var FacilityDetailsDTO = {
            CreditInfoId: creditInfoId,
            NatureOfFacility: NatureOfFacilityId,
            ELFunded: ELFunded,
            ELNonFunded: ELNonFunded,
            POSFunded: POSFunded,
            POSNonFunded: POSNonFunded,
            Validity: Validity,
            EOL: EOL,
            LYTurnOver: LYTurnOver,
            OverdueInstNo: ODInstNO,
            OverdueInstAmount: ODInstAmout,
            CLStatus: CLStatus,
            APFFunded: APFFunded,
            APFNonFunded: APFNonFunded,
            FaiclityFor: FacilityFor
        };

        // Show loader
        showActionLoader(true, 'Saving Facility Information');

        // Ajax call
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveFacilityDetail", "Credit")",
                data: FacilityDetailsDTO,
                cache: false,
                dataType: "json",
                success: function (data) {

                    BindFacilityList(creditInfoId);
                },
                Error: function () {
                    showError("Error to execute ajax call");
                }
            });
        });

        function BindFacilityList(creditInfoId) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetFacilityDetailList", "Credit")",
                data: { creditInfoId: creditInfoId },
            cache: false,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                // Renter the records
                $(".facility-record-list").html(data.html);
                $('#facilityRecordList', $(".facility-record-list")).dataTable(
                    {
                        "sScrollX": "100%",
                        "sScrollXInner": "110%",
                        "bScrollCollapse": true,
                        "bPaginate": false,
                        "bFilter": false,
                        "bInfo": false
                        //"fnFooterCallback": function (nRow, aaData, iStart, iEnd, aiDisplay) {
                        //    /*
                        //     * TODO - Need to calculate total 
                        //     */

                        //    /* Updated footer row with total*/
                        //    var footerCells = nRow.getElementsByTagName('th');
                        //    footerCells[1].innerHTML = 'Total will be shown here (need to be implemented)';
                        //}
                    }
                );
            },
            error: function (xhr, status, error) {
                showError("Error to execute ajax call");
            }
            });
    }    

    function PopulateFacilityList() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetNatureOfFacilities", "Credit")",
            cache: false,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $.each(data, function (i, item) {
                    var option = new Option(item.Value, item.Key);
                    $('#ddlFacility').append(option);
                });
            },
            error: function (xhr, status, error) {
                showError("Error to execute ajax call");
            }
        });
    }
    //***********End of Facility Section ************//

    // ******* CIB Section *********//
    function ToFixedDecimalPlaces(numberToBeFixedPlace, nunberOfDecimalPlaces) {
        var processedNumber = Math.round(numberToBeFixedPlace * Math.pow(10, nunberOfDecimalPlaces)) / Math.pow(10, nunberOfDecimalPlaces);
        return parseFloat(processedNumber);
    }

    // Create cib status 
    $(".create-cibstatus-button").click(function (e) {
        e.preventDefault();

        var id = 0; //Adding new record
        var creditInfoId = parseInt(getUrlVars()["creditId"], 10);
        var FundedOrNonFunded = $('input[name=rdNOF]:checked', '.cibStatusEntry').val() * 1;
        var CustLimit = $("#txtCustLimit").val();
        var CustOS = $("#txtCustOS").val();
        var AlliedLimit = $("#txtAlliedLimit").val();
        var AlliedOS = $("#txtAlliedOS").val();
        //var ReportDate = new Date;

        // Prepare data transfer object
        var cibStatusDTO = {
            CIBStatusId: id,
            CreditInfoId: creditInfoId,
            NOF: FundedOrNonFunded,
            CustLimit: CustLimit,
            CustOS: CustOS,
            AlliedLimit: AlliedLimit,
            AlliedOS: AlliedOS
        };

        // Show loader
        showActionLoader(true, 'Saving CIB Status Information');

        // Ajax call
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveCIBStatus", "Credit")",
                data: cibStatusDTO,
                cache: false,
                dataType: "json",
                success: function (data) {

                    // Hide loader
                    showActionLoader(false);
                    // Clear text fileds
                    $(".cibStatusEntry :text").val('');
                    PopulateCIBStatusTable(creditInfoId);

                    // Show message
                    $('#message').html('CIBStatus record has been addded successfully!').addClass('success-message').show();
                    setTimeout(function () {
                        $('#message').html('').removeClass('success-message').hide();
                    }, 5000);
                },
                Error: function () {
                    showError("Error to execute ajax call");
                }
            });
        });

        function PopulateCIBStatusTable(creditInfoId) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetCIBStatusList", "Credit")",
                cache: false,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    // Renter the records
                    $(".cibstatus-record-list").html(data.html);
                    $('#cibStatusRecordList', $(".cibstatus-record-list")).dataTable({
                        "fnFooterCallback": function (nRow, aaData, iStart, iEnd, aiDisplay) {

                            var nColumnTotals = [0, 0, 0, 0];
                            for (var i = 0 ; i < aaData.length; i++) {
                                nColumnTotals[0] += Number(aaData[i][1]);
                                nColumnTotals[1] += Number(aaData[i][2]);
                                nColumnTotals[2] += Number(aaData[i][3]);
                                nColumnTotals[3] += Number(aaData[i][4]);
                            }

                            var nCells = nRow.getElementsByTagName('th');
                            nCells[1].innerHTML = ToFixedDecimalPlaces(nColumnTotals[0], 2);
                            nCells[2].innerHTML = ToFixedDecimalPlaces(nColumnTotals[1], 2);
                            nCells[3].innerHTML = ToFixedDecimalPlaces(nColumnTotals[2], 2);
                            nCells[4].innerHTML = ToFixedDecimalPlaces(nColumnTotals[3], 2);
                        }
                    });
                },
                error: function (xhr, status, error) {
                    showError("Error to execute ajax call");
                }
            });
        }

        //***********End of CIBStatus Section ************//

</script>